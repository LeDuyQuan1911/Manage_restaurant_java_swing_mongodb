/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import java.util.ArrayList;
import org.bson.Document;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import java.util.List;
import org.bson.Document;
import javax.swing.*;
import org.bson.types.ObjectId;
import org.bson.types.ObjectId;
import view.GoiMon;
import view.DatBan;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.model.UpdateOptions;
/**
 *
 * @author kevin
 */
public class ThanhToan extends javax.swing.JFrame {
    private javax.swing.JPanel tablePanel;
    private int table_Number;
    
    // Assuming you have a valid ObjectId to pass
    ObjectId someObjectId = new ObjectId(); // Example ObjectId, replace with a valid one

    // Create an instance of DatBan with the idBill
    
    DatBan datBanInstance = new DatBan();
    
    public ObjectId getIdBill(){
    return idBill;
    }
    

    // Now you can call getIdBill() on this instance
    ObjectId idBill = datBanInstance.getIdBill();

    /**
     * Creates new form ThanhToan
     */
    public ThanhToan() {
        initComponents();
          // Kết nối tới cơ sở dữ liệu MongoDB và lấy dữ liệu từ collection "bill"
        displayBillInfoInTextField();
    }
    public ThanhToan(int table_Number, ObjectId idBill) {
        this.table_Number = table_Number;
        this.idBill = idBill; // Đảm bảo rằng idBill đã được khởi tạo
        initComponents();
        displayBillInfoInTextField();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setText("HÓA ĐƠN");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 203, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(206, 206, 206))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void displayBillInfoInTextField() {
    try {
        com.mongodb.client.MongoClient mongoClient = MongoClients.create("mongodb+srv://phucpro2104:phuc123@cluster0.7834cva.mongodb.net/");
        MongoDatabase database = mongoClient.getDatabase("restaurant");
        MongoCollection<Document> collection = database.getCollection("bill");

        Document billDocument = collection.find(new Document("idBill", this.idBill)).first();

        if (billDocument != null) {
            StringBuilder billInfo = new StringBuilder();

            // Extracting and formatting each field
            Document bill = (Document) billDocument.get("bill");
            List<Document> order = (List<Document>) billDocument.get("order");
            
            billInfo.append("Bill ID: ").append(billDocument.getObjectId("idBill").toHexString()).append("\n");
            billInfo.append("Table Number: ").append(billDocument.getInteger("table_number")).append("\n");
            billInfo.append("Bill Date: ").append(bill.get("bill_date")).append("\n");
            billInfo.append("Total Price: ").append(bill.get("total_price")).append("\n");
            billInfo.append("Payment Status: ").append(billDocument.getString("payment_status")).append("\n");
            billInfo.append("Order Details:\n");

            for (Document item : order) {
                billInfo.append(" - Food ID: ").append(item.getInteger("foodId"))
                        .append(", Quantity: ").append(item.getInteger("quantity")).append("\n");
            }

            // Setting the text to jTextField
            jTextArea1.setText(billInfo.toString());
        } else {
            jTextArea1.setText("Bill not found");
        }
    } catch (Exception e) {
        e.printStackTrace();
        jTextArea1.setText("Error connecting to MongoDB: " + e.getMessage());
    }
}   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThanhToan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
